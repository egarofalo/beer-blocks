@use "sass:map";
@use "sass:list";

// Import other helpers
@import "./border";
// Plugin custom variables and functions
@import "./../../functions";

// Get statuses rules
@mixin statusesRules(
	$blockName,
	$attrPrefix: "",
	$hoverColor: false,
	$activeColor: false,
	$focusColor: false,
	$hoverBackground: false,
	$activeBackground: false,
	$focusBackground: false,
	$hoverBorderColor: false,
	$activeBorderColor: false,
	$focusBorderColor: false,
	$transition: false
) {
	// hover status
	&:hover {
		@if $hoverColor {
			&.wp-beer-blocks-has-hover-color-rule {
				color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(#{$attrPrefix}-hover-color)}
				);
			}
		}

		@if $hoverBackground {
			&.wp-beer-blocks-has-hover-background-rule {
				background: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-hover-background
						)}
				);
			}
		}

		@if $hoverBorderColor {
			&.wp-beer-blocks-has-hover-border-color-rule {
				border-color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-hover-border-color
						)}
				);
			}
		}
	}

	// active status
	&:active {
		@if $activeColor {
			&.wp-beer-blocks-has-active-color-rule {
				color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-active-color
						)}
				);
			}
		}

		@if $activeBackground {
			&.wp-beer-blocks-has-active-background-rule {
				background: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-active-background
						)}
				);
			}
		}

		@if $activeBorderColor {
			&.wp-beer-blocks-has-active-border-color-rule {
				border-color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-active-border-color
						)}
				);
			}
		}
	}

	// focus status
	&:focus {
		@if $focusColor {
			&.wp-beer-blocks-has-focus-color-rule {
				color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(#{$attrPrefix}-focus-color)}
				);
			}
		}

		@if $focusBackground {
			&.wp-beer-blocks-has-focus-background-rule {
				background: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-focus-background
						)}
				);
			}
		}

		@if $focusBorderColor {
			&.wp-beer-blocks-has-focus-border-color-rule {
				border-color: var(
					--wp-beer-blocks-#{$blockName}-#{camelize(
							#{$attrPrefix}-focus-border-color
						)}
				);
			}
		}
	}

	// transition rules
	@if $transition {
		$transitionProperty: ();

		@if $hoverColor or $activeColor or $focusColor {
			$transitionProperty: list.append($transitionProperty, color);
		}

		@if $hoverBackground or $activeBackground or $focusBackground {
			$transitionProperty: list.append($transitionProperty, background);
		}

		@if $hoverBorderColor or $activeBorderColor or $focusBorderColor {
			$transitionProperty: list.append($transitionProperty, border-color);
		}

		&.wp-beer-blocks-has-transition-property-rule {
			transition-property: implode($transitionProperty, ", ");
		}

		&.wp-beer-blocks-has-transition-delay-rule {
			transition-delay: var(
				--wp-beer-blocks-#{$blockName}-#{camelize(
						#{$attrPrefix}-transition-delay
					)}
			);
		}

		&.wp-beer-blocks-has-transition-duration-rule {
			transition-duration: var(
				--wp-beer-blocks-#{$blockName}-#{camelize(
						#{$attrPrefix}-transition-duration
					)}
			);
		}

		&.wp-beer-blocks-has-transition-timing-function-rule {
			transition-timing-function: var(
				--wp-beer-blocks-#{$blockName}-#{camelize(
						#{$attrPrefix}-transition-timing-function
					)}
			);
		}
	}
}
