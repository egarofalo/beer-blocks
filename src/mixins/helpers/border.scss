@use "sass:map";

// Plugin custom functions
@import "./../../functions";

// Default border
$defaultBorder: (
	style: none,
	color: transparent,
	width: 0px,
);

// Default border radius
$defaultBorderRadius: (
	top-left: 0px,
	top-right: 0px,
	bottom-right: 0px,
	bottom-left: 0px,
);

@mixin innerBorderRules($varPrefix, $side, $defaultValue) {
	@if map.has-key($defaultValue, style) {
		border-#{$side}-style: var(
			--#{$varPrefix + capitalize($side)}Style,
			map.get($defaultValue, style)
		);
	}

	border-#{$side}-color: var(
		--#{$varPrefix + capitalize($side)}Color,
		map.get($defaultValue, color)
	);

	border-#{$side}-width: var(
		--#{$varPrefix + capitalize($side)}Width,
		map.get($defaultValue, width)
	);
}

@mixin innerBorderRadiusRules($varPrefix, $side: "all", $defaultValue) {
	@if ($side == "all") {
		border-top-left-radius: var(
			--#{$varPrefix}RadiusTopLeft,
			map.get($defaultValue, top-left)
		);
		border-top-right-radius: var(
			--#{$varPrefix}RadiusTopRight,
			map.get($defaultValue, top-right)
		);
		border-bottom-right-radius: var(
			--#{$varPrefix}RadiusBottomRight,
			map.get($defaultValue, bottom-right)
		);
		border-bottom-left-radius: var(
			--#{$varPrefix}RadiusBottomLeft,
			map.get($defaultValue, bottom-left)
		);
	} @else {
		border-#{$side}-radius: var(
			--#{$varPrefix}Radius#{capitalize(camelize($side))},
			map.get($defaultValue, $side)
		);
	}
}

// Get border styles rules
@mixin borderRules(
	$blockName,
	$attrPrefix: "",
	$borderDefaults: $defaultBorder,
	$borderRadius: false,
	$borderRadiusDefaults: $defaultBorderRadius
) {
	$varPrefix: wp-beer-blocks-#{$blockName}-#{camelize("#{$attrPrefix}-border")};

	@each $side in (top, right, bottom, left) {
		$defaultBorderValue: if(
			map.has-key($borderDefaults, $side),
			map.get($borderDefaults, $side),
			$borderDefaults
		);
		@include innerBorderRules($varPrefix, $side, $defaultBorderValue);
	}

	@if $borderRadius {
		@include innerBorderRadiusRules(
			$varPrefix,
			$defaultValue: $borderRadiusDefaults
		);
	}
}

// Get border styles rules for Accordion Item block
@mixin accordionItemBorderRules(
	$attrPrefix: "",
	$borderDefaults: $defaultBorder,
	$borderRadius: false,
	$borderRadiusDefaults: $defaultBorderRadius
) {
	$varPrefix: wp-beer-blocks-accordion-item-#{camelize("#{$attrPrefix}-border")};

	@each $side in (top, right, bottom, left) {
		@include innerBorderRules($varPrefix, $side, $borderDefaults);

		@if $side == bottom {
			&:not(:last-of-type) {
				@include innerBorderRules($varPrefix, $side, $borderDefaults);
			}
		} @else if $side == top {
			&:not(:first-of-type) {
				@include innerBorderRules($varPrefix, $side, $borderDefaults);
			}
		}
	}

	@if $borderRadius {
		@include innerBorderRadiusRules(
			$varPrefix,
			top-left,
			$borderRadiusDefaults
		);
		@include innerBorderRadiusRules(
			$varPrefix,
			top-right,
			$borderRadiusDefaults
		);
		@include innerBorderRadiusRules(
			$varPrefix,
			bottom-right,
			$borderRadiusDefaults
		);
		@include innerBorderRadiusRules(
			$varPrefix,
			bottom-left,
			$borderRadiusDefaults
		);

		&:not(:last-of-type) {
			@include innerBorderRadiusRules(
				$varPrefix,
				bottom-right,
				$borderRadiusDefaults
			);
			@include innerBorderRadiusRules(
				$varPrefix,
				bottom-left,
				$borderRadiusDefaults
			);
		}

		&:not(:first-of-type) {
			@include innerBorderRadiusRules(
				$varPrefix,
				top-left,
				$borderRadiusDefaults
			);
			@include innerBorderRadiusRules(
				$varPrefix,
				top-right,
				$borderRadiusDefaults
			);
		}
	}
}
